{"version":3,"sources":["pages/homepage/homepage.jsx","component/SkillsInput/SkillsInput.jsx","component/InputField/CompanyInputFields.jsx","pages/companyRegistration/companyRegistration.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["homepage","redirect","to","className","Button","variant","color","React","Component","Label","styled","InputWrapper","Tag","label","onDelete","props","onClick","Listbox","topSkills","title","CustomizedHook","useAutocomplete","id","defaultValue","multiple","options","getOptionLabel","option","getRootProps","getInputLabelProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","value","focused","setAnchorEl","NoSsr","ref","map","index","length","fontSize","CompanyInputFields","state","name","jobTitle","location","skills","description","handleChange","handleChangeName","bind","handleChangeJobTitle","handleChangeLocation","handleChangeSkills","handleChangeDescription","handleSubmit","event","this","setState","target","preventDefault","console","log","axios","post","Paper","elevation","noValidate","autoComplete","onSubmit","TextField","type","onChange","e","CompanyInput","App","exact","path","component","Homepage","CompanyRegistration","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f6734ad6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './homepage.scss';\r\nimport {  Redirect , Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass homepage extends React.Component {\r\n\r\n     redirect = () => {\r\n        if(true){\r\n            return  <Redirect  to=\"/company-register\" />\r\n        }\r\n     }\r\n\r\n     render() {\r\n    return (\r\n        <div className='homepage'>\r\n                <Link to ='/company-register'><Button className='button' variant=\"contained\" color=\"primary\">\r\n                        Login as a Company\r\n                </Button>\r\n                </Link>\r\n                <br/>\r\n                <br/>\r\n                <Button className='button' variant=\"contained\" color=\"primary\">\r\n                        Login to find Job!\r\n                </Button>\r\n        </div>\r\n    )\r\n     }\r\n}\r\n\r\nexport default homepage;","import React from 'react';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport styled from 'styled-components';\r\n\r\nconst Label = styled('label')`\r\n  padding: 0 0 4px;\r\n  line-height: 1.5;\r\n  display: block;\r\n`;\r\n\r\nconst InputWrapper = styled('div')`\r\n  margin-left:43vh;\r\n  width: 220px;\r\n  border: 1px solid #d9d9d9;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 1px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  &:hover {\r\n    border-color: #40a9ff;\r\n  }\r\n\r\n  &.focused {\r\n    border-color: #40a9ff;\r\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\r\n  }\r\n\r\n  & input {\r\n    font-size: 14px;\r\n    height: 30px;\r\n    box-sizing: border-box;\r\n    padding: 4px 6px;\r\n    width: 0;\r\n    min-width: 30px;\r\n    flex-grow: 1;\r\n    border: 0;\r\n    margin: 0;\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst Tag = styled(({ label, onDelete, ...props }) => (\r\n  <div {...props}>\r\n    <span>{label}</span>\r\n    <CloseIcon onClick={onDelete} />\r\n  </div>\r\n))`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 24px;\r\n  margin: 2px;\r\n  line-height: 22px;\r\n  background-color: #fafafa;\r\n  border: 1px solid #e8e8e8;\r\n  border-radius: 2px;\r\n  box-sizing: content-box;\r\n  padding: 0 4px 0 10px;\r\n  outline: 0;\r\n  overflow: hidden;\r\n\r\n  &:focus {\r\n    border-color: #40a9ff;\r\n    background-color: #e6f7ff;\r\n  }\r\n\r\n  & span {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  & svg {\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    padding: 4px;\r\n  }\r\n`;\r\n\r\nconst Listbox = styled('ul')`\r\n  width: 300px;\r\n  margin: 2px 0 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  list-style: none;\r\n  background-color: #fff;\r\n  overflow: auto;\r\n  max-height: 250px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  z-index: 1;\r\n\r\n  & li {\r\n    padding: 5px 12px;\r\n    display: flex;\r\n\r\n    & span {\r\n      flex-grow: 1;\r\n    }\r\n\r\n    & svg {\r\n      color: transparent;\r\n    }\r\n  }\r\n\r\n  & li[aria-selected='true'] {\r\n    background-color: #fafafa;\r\n    font-weight: 600;\r\n\r\n    & svg {\r\n      color: #1890ff;\r\n    }\r\n  }\r\n\r\n  & li[data-focus='true'] {\r\n    background-color: #e6f7ff;\r\n    cursor: pointer;\r\n\r\n    & svg {\r\n      color: #000;\r\n    }\r\n  }\r\n`;\r\nconst topSkills = [\r\n  { title: 'Java'},\r\n  { title: 'CPP' },\r\n  { title: 'DSA' },\r\n  { title: 'MySQL' },\r\n  { title: 'MongoDB' },\r\n  \r\n\r\n];\r\n\r\nexport default function CustomizedHook() {\r\n  const {\r\n    getRootProps,\r\n    getInputLabelProps,\r\n    getInputProps,\r\n    getTagProps,\r\n    getListboxProps,\r\n    getOptionProps,\r\n    groupedOptions,\r\n    value,\r\n    focused,\r\n    setAnchorEl,\r\n  } = useAutocomplete({\r\n    id: 'customized-hook-demo',\r\n    defaultValue: [topSkills[1]],\r\n    multiple: true,\r\n    options: topSkills,\r\n    getOptionLabel: (option) => option.title,\r\n  });\r\n\r\n  return (\r\n    <NoSsr>\r\n      <div>\r\n        <div {...getRootProps()}>\r\n          <Label {...getInputLabelProps()}>Add Required Skills</Label>\r\n          <InputWrapper ref={setAnchorEl} className={focused ? 'focused' : ''}>\r\n            {value.map((option, index) => (\r\n              <Tag label={option.title} {...getTagProps({ index })} />\r\n            ))}\r\n\r\n            <input {...getInputProps()} />\r\n          </InputWrapper>\r\n        </div>\r\n        {groupedOptions.length > 0 ? (\r\n          <Listbox {...getListboxProps()}>\r\n            {groupedOptions.map((option, index) => (\r\n              <li {...getOptionProps({ option, index })}>\r\n                <span>{option.title}</span>\r\n                <CheckIcon fontSize=\"small\" />\r\n              </li>\r\n            ))}\r\n          </Listbox>\r\n        ) : null}\r\n      </div>\r\n    </NoSsr>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './CompanyInputFields.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport styled from 'styled-components';\r\nimport Skills from '../SkillsInput/SkillsInput';\r\nconst API_URL = 'http://localhost:8080';\r\nclass CompanyInputFields extends React.Component {\r\n  \r\n \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {name: '',jobTitle:'',location:'',skills:'',description:''};\r\n\r\n    this.handleChange = this.handleChangeName.bind(this);\r\n    this.handleChange = this.handleChangeJobTitle.bind(this);\r\n    this.handleChange = this.handleChangeLocation.bind(this);\r\n    this.handleChange = this.handleChangeSkills.bind(this);\r\n    this.handleChange = this.handleChangeDescription.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({name: event.target.value});\r\n  }\r\n\r\n  handleChangeJobTitle(event) {\r\n    this.setState({jobTitle: event.target.value});\r\n  }\r\n  handleChangeLocation(event) {\r\n    this.setState({location: event.target.value});\r\n  }\r\n\r\n  handleChangeSkills(event) {\r\n    this.setState({skills: event.target.value});\r\n  }\r\n  handleChangeDescription(event) {\r\n    this.setState({description: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    //alert('Your Comapny has been added to the database');\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    \r\n    return axios.post(`https://localhost:8080/register-company`,this.state);\r\n  }\r\n\r\n  render() {\r\n   \r\n  return (\r\n    \r\n    <div>\r\n    <Paper elevation={20} className='paper'>\r\n          <form  noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n              <TextField id=\"outlined-basic\" type=\"text\"  value={this.state.name} onChange={(e)=>this.handleChangeName(e)}  label=\"Enter Company Name\" variant=\"outlined\" />\r\n              <br/>\r\n              <br/>\r\n              <TextField  id=\"outlined-basic\"  type=\"text\"  value={this.state.jobTitle} onChange={(e)=>this.handleChangeJobTitle(e)} label=\"Enter Job Title\" variant=\"outlined\" />\r\n              <br/>\r\n              <br/>\r\n              <TextField id=\"outlined-basic\"  type=\"text\"  value={this.state.location} onChange={(e) => this.handleChangeLocation(e)} label=\"Enter Company Location\" variant=\"outlined\" />\r\n              <br/>\r\n              <br/>\r\n              <Skills value={this.state.skills} onChange={this.handleChangeSkills} ></Skills>\r\n              <br/>\r\n              <TextField id=\"outlined-basic\" type=\"text\"  value={this.state.description} onChange={(e) => this.handleChangeDescription(e)}  label=\"Job Description\" variant=\"outlined\" />\r\n              <br/>\r\n              <br/>\r\n              <Button variant=\"contained\" color=\"primary\" type =\"submit\" value = \"submit\">\r\n                    Submit\r\n              </Button>\r\n          </form>\r\n    </Paper>\r\n    </div>\r\n  );\r\n                        }\r\n}\r\n\r\n\r\n\r\nexport default CompanyInputFields;","import React from 'react';\r\nimport CompanyInputFields from '../../component/InputField/CompanyInputFields.jsx'\r\n\r\nconst CompanyInput = () => (\r\n    \r\n        <div>\r\n            <h1>Company Registration</h1>\r\n            <CompanyInputFields/>\r\n        </div>\r\n)\r\n\r\nexport default CompanyInput;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Homepage from './pages/homepage/homepage'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nimport CompanyRegistration from  '../src/pages/companyRegistration/companyRegistration';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path='/' component={Homepage}></Route>\n          <Route exact path='/company-register' component={CompanyRegistration}></Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}